package cn.dmdl.stl.hospitalbudget.budget.entity;

// Generated 2017-6-6 16:38:29 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * YsAuditContractInfo generated by hbm2java
 */
@Entity
@Table(name = "ys_audit_contract_info", catalog = "hospital_budget")
public class YsAuditContractInfo implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer auditContractInfoId;
	private Integer genericProjectId;
	private Integer deptId;
	private String auditTitle;
	private double auditAmount;
	private double auditAmountFrozen;
	private double auditAmountSurplus;
	private String auditRemark;
	private String attachment;
	private int insertUser;
	private Date insertTime;
	private Integer updateUser;
	private Date updateTime;
	private boolean deleted;

	public YsAuditContractInfo() {
	}

	public YsAuditContractInfo(String auditTitle,
			double auditAmount, double auditAmountFrozen,
			double auditAmountSurplus, String auditRemark, String attachment,
			int insertUser, Date insertTime, boolean deleted) {
		this.auditTitle = auditTitle;
		this.auditAmount = auditAmount;
		this.auditAmountFrozen = auditAmountFrozen;
		this.auditAmountSurplus = auditAmountSurplus;
		this.auditRemark = auditRemark;
		this.attachment = attachment;
		this.insertUser = insertUser;
		this.insertTime = insertTime;
		this.deleted = deleted;
	}

	public YsAuditContractInfo(Integer genericProjectId,
			Integer deptId, String auditTitle, double auditAmount,
			double auditAmountFrozen, double auditAmountSurplus,
			String auditRemark, String attachment, int insertUser,
			Date insertTime, Integer updateUser, Date updateTime,
			boolean deleted) {
		this.genericProjectId = genericProjectId;
		this.deptId = deptId;
		this.auditTitle = auditTitle;
		this.auditAmount = auditAmount;
		this.auditAmountFrozen = auditAmountFrozen;
		this.auditAmountSurplus = auditAmountSurplus;
		this.auditRemark = auditRemark;
		this.attachment = attachment;
		this.insertUser = insertUser;
		this.insertTime = insertTime;
		this.updateUser = updateUser;
		this.updateTime = updateTime;
		this.deleted = deleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "audit_contract_info_id", unique = true, nullable = false)
	public Integer getAuditContractInfoId() {
		return this.auditContractInfoId;
	}

	public void setAuditContractInfoId(Integer auditContractInfoId) {
		this.auditContractInfoId = auditContractInfoId;
	}

	@Column(name = "generic_project_id")
	public Integer getGenericProjectId() {
		return this.genericProjectId;
	}

	public void setGenericProjectId(Integer genericProjectId) {
		this.genericProjectId = genericProjectId;
	}

	@Column(name = "dept_id")
	public Integer getDeptId() {
		return this.deptId;
	}

	public void setDeptId(Integer deptId) {
		this.deptId = deptId;
	}

	@Column(name = "audit_title", nullable = false, length = 100)
	@NotNull
	@Length(max = 100)
	public String getAuditTitle() {
		return this.auditTitle;
	}

	public void setAuditTitle(String auditTitle) {
		this.auditTitle = auditTitle;
	}

	@Column(name = "audit_amount", nullable = false, precision = 22, scale = 0)
	public double getAuditAmount() {
		return this.auditAmount;
	}

	public void setAuditAmount(double auditAmount) {
		this.auditAmount = auditAmount;
	}

	@Column(name = "audit_amount_frozen", nullable = false, precision = 22, scale = 0)
	public double getAuditAmountFrozen() {
		return this.auditAmountFrozen;
	}

	public void setAuditAmountFrozen(double auditAmountFrozen) {
		this.auditAmountFrozen = auditAmountFrozen;
	}

	@Column(name = "audit_amount_surplus", nullable = false, precision = 22, scale = 0)
	public double getAuditAmountSurplus() {
		return this.auditAmountSurplus;
	}

	public void setAuditAmountSurplus(double auditAmountSurplus) {
		this.auditAmountSurplus = auditAmountSurplus;
	}

	@Column(name = "audit_remark", nullable = false, length = 300)
	@NotNull
	@Length(max = 300)
	public String getAuditRemark() {
		return this.auditRemark;
	}

	public void setAuditRemark(String auditRemark) {
		this.auditRemark = auditRemark;
	}

	@Column(name = "attachment", nullable = false, length = 32)
	@NotNull
	@Length(max = 32)
	public String getAttachment() {
		return this.attachment;
	}

	public void setAttachment(String attachment) {
		this.attachment = attachment;
	}

	@Column(name = "insert_user", nullable = false)
	public int getInsertUser() {
		return this.insertUser;
	}

	public void setInsertUser(int insertUser) {
		this.insertUser = insertUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "insert_time", nullable = false, length = 19)
	@NotNull
	public Date getInsertTime() {
		return this.insertTime;
	}

	public void setInsertTime(Date insertTime) {
		this.insertTime = insertTime;
	}

	@Column(name = "update_user")
	public Integer getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(Integer updateUser) {
		this.updateUser = updateUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "deleted", nullable = false)
	public boolean isDeleted() {
		return this.deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

}
